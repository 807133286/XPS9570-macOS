#+STARTUP: indent
* Overview
This repository contains a sample configuration to run macOS Mojave (10.14) on a Dell XPS 9570.

This guide is currently a work in progress, since the XPS 9570 isn't perfectly supported yet. I will
update this guide as I test new fixes or updates. If you find any errors or problems, please let me
know. I'm hoping this will become the definitive guide for running macOS on the XPS 9570.

This repo and many pieces are based on the-darkvoid's [[https://github.com/the-darkvoid/XPS9360-macOS][XPS9360-macOS repo]], which is also a good guide
for other kexts/patches/solutions/etc.
** Tested hardware configuration
- Dell XPS 9570
  - Intel i9-8950HK
  - 32GB RAM
  - 4K display
  - Toshiba SSD
  - Realtek ALC298 (ALC3266 according to Dell)
  - Goodix fingerprint reader
  - Wacom touchscreen
  - TODO: Touchpad manufacturer?
- Software environment
  - BIOS: 1.7.0
  - Dual-booting Windows 10
** Tested software configurations
- macOS: 10.14.0, 10.14.1, 10.14.2, 10.14.3
- BIOS: 1.5.0, 1.7.0
* Hardware
** Intel UHD 630 graphics
Intel graphics is supported by [[https://www.tonymacx86.com/threads/fix-coffee-lake-intel-uhd-graphics-630-on-macos-mojave-kernel-panic-due-to-divide-by-zero.261687/][setting the maximum link rate in DPCD buffer]]. This likely causes
problems with HDMI output, which does not work. This fix also allows the display to go to sleep
without causing graphics to become choppy on wake-up.

To determine if Intel GPU acceleration is working, check: =About This Mac -> Intel UHD Graphics 630
1536 MB=. A value less than 1536MB indicates a problem (e.g. 7MB or 31MB are common).

Side note: Some threads discuss setting DVMT pre-alloc in the BIOS, which is not possible on most
laptops, including the XPS 9570. However, the default of 64MB DVMT is sufficient, so nothing needs to be done.
*** Enabling acceleration
- [[file:CLOVER/config.plist][config.plist]]
  - Graphics/Inject/Intel=yes
  - Graphics/ig-platform-id=0x3e9b0000
  - KernelAndKextPatches/KextsToPatch/Item 1 (Maximum link rate 0x14 (HBR2) - works for 4K XPS 9570)
  - KernelAndKextPatches/KextsToPatch/Item 2 (Maximum link rate 0x0A (HBR) - needed for 1080p XPS 9570? TBD)
- Install [[https://github.com/acidanthera/Lilu][Lilu]] [[file:kexts/Lilu.kext][kext]]
- Install [[https://github.com/acidanthera/WhateverGreen][WhateverGreen]] [[file:kexts/WhateverGreen.kext][kext]]
*** Enabling backlight control via slider in Sys. Prefs. -> Displays
Patched via kext and SSDT patch ([[https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightfixup-kext.218222/][discussion]]). Can use pre-built [[https://bitbucket.org/RehabMan/applebacklightfixup/downloads/][kext and SSDT-PNLF.aml]], but is
identical to SSDT-PNLF.aml compiled from [[https://github.com/RehabMan/OS-X-Clover-Laptop-Config/blob/master/hotpatch/SSDT-PNLF.dsl][SSDT-PNLF.dsl]] in [[https://github.com/RehabMan/OS-X-Clover-Laptop-Config][OS-X-Clover-Laptop-Config]].
- Include [[https://github.com/RehabMan/AppleBacklightFixup][AppleBacklightFixup]] [[file:kexts/AppleBacklightFixup.kext][kext]]
- +Include [[file:CLOVER/ACPI/patched/SSDT-PNLF.aml][SSDT-PNLF.aml]] ([[file:CLOVER/ACPI/patched/SSDT-PNLF.dsl][SSDT-PNLF.dsl]])+
- Include [[file:CLOVER/ACPI/patched/SSDT-PNLFCFL.aml][SSDT-PNLFCFL.aml]] ([[file:CLOVER/ACPI/patched/SSDT-PNLFCFL.dsl][SSDT-PNLFCFL.dsl]]); possibly temporary until fix is included in SSDT-PNLF.
*** Preventing black/dark screen 3 minutes after booting
This was a complex issue with a [[https://www.tonymacx86.com/threads/bug-black-screen-3-minutes-after-booting-coffeelake-uhd-630.261131/][long thread]] to find a solution. This fix is possibly not perfect
yet; if you do run into this problem despite the fix, open an issue in this repo and/or reply to the
thread with the discussion.
- [[file:CLOVER/ACPI/patched/SSDT-PNLFCFL.aml][SSDT-PNLFCFL.aml]] is already included in step above
- Use Lilu 1.2.9 or higher
- Use WhateverGreen 1.2.5 or higher
- Remember to update kext cache whenever a kext is added or updated (note to self: stop forgetting that ugh)
If brightness controls still don't work on boot, or the screen goes black periodically, try booting
with WhateverGreen boot argument =igfxcflbklt=1=. This force-enables the Coffee Lake backlight fix.
*** Known problems/caveats
- HDMI output does not work; inserting cable causes kernel panic
** PS/2 Keyboard
The internal keyboard is a PS/2 device, but macOS does not support PS/2. This can be implemented
with VoodooPS2Controller.
*** Installation
- Include [[https://github.com/RehabMan/OS-X-Voodoo-PS2-Controller][VoodooPS2Controller]] [[file:kexts/VoodooPS2Controller.kext][kext]]
- Enabling brightness keys
  - Include [[file:CLOVER/ACPI/patched/SSDT-BRT6.aml][SSDT-BRT6.aml]] ([[file:CLOVER/ACPI/patched/SSDT-BRT6.dsl][SSDT-BRT6.dsl]])
  - [[file:CLOVER/config.plist][config.plist]] changes to rename BRT6 to BRTX in DSDT so we can replace it with our function
    - ACPI/DSDT/Patches/Item n
      - Key=Find, Type=Data, Value=<14204252 543602>
      - Key=Replace, Type=Data, Value=<14204252 545802>
- Include [[file:CLOVER/ACPI/patched/SSDT-PS2-Keymap.aml][SSDT-PS2-Keymap.aml]] ([[file:CLOVER/ACPI/patched/SSDT-PS2-Keymap.dsl][SSDT-PS2-Keymap.dsl]]) to remap keys (optional)
  - See list of [[https://wiki.osdev.org/PS/2_Keyboard][PS/2 scan codes (scan code set 1)]] for codes generated by keyboard, and [[file:/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Headers/Events.h][ADB key codes]]
    for codes recognized by macOS.
*** Debugging key codes
- Install debug version of VoodooPS2Controller
- Log key codes captured
  #+BEGIN_SRC sh
  log stream | sed -n 's/.*\(ApplePS2Keyboard: sending key\)/\1/p'
  #+END_SRC
*** Known problems/caveats
- Can cause reboot on startup (intermittent)
- Keyboard options like modifier key settings cause an erratic/disabled keyboard
  For key remapping, see SSDT-PS2-Keymap.dsl above. Key repeat speed and delay are ok to change.
- Can't wake up from sleep with internal keyboard
- Enables poor quality touchpad by default
** Wi-Fi/Bluetooth
Based on [[https://www.tonymacx86.com/threads/broadcom-wifi-bluetooth-guide.242423/][Broadcom Wi-Fi Bluetooth Guide]], and see threads [[https://www.tonymacx86.com/threads/wip-guide-hp-envy-x360-13-y013cl-i7-7500u-kaby-lake.213327/page-17][one]] and [[https://www.tonymacx86.com/threads/solved-handoff-continuity-auto-unlock-not-working-bcm94360cd-asrock-fatal1ty-z97x-killer.239277/][two]].

One possible replacement card is the Dell DW1830, based on the Broadcom BCM943602BAED. I've used
this card here (purchased on EBay), although it's currently a bit expensive at around $50. Dell no
longer offers this card directly.

This card has three antennas, while the XPS 9570 has only two antennas in the display. To get full
Wi-Fi speed, a third antenna with a U.Fl connector must be added. This antenna can be placed in a
small gap next to the battery. It's OK to leave J2 unconnected, however - modern network cards
should recognize this and disable the 3rd port. Without the 3rd antenna, I'm able to get speeds up
to about 800Mbps.

Connectors J0, J1, J2 should be connected as follows (see [[file:images/3rd_antenna.jpg][installation example]]):

  - J0: white antenna cable to display (primary)
  - J1: black antenna cable to display (Bluetooth/secondary)
  - J2: extra retrofitted antenna next to battery

The DW1830 Wi-Fi card is based on the Broadcom BCM943602BAED, using BCM43602 for Wi-Fi and BCM20703
for Bluetooth. While Wi-Fi works by default, it shows up as a "Third-Party Wireless Card" in System
Information unless AirportBrcmFixup is installed, and Bluetooth requires kexts from
OS-X-BrcmPatchRAM.
*** Installation
- Include [[https://github.com/acidanthera/AirportBrcmFixup][AirportBrcmFixup]] [[file:kexts/AirportBrcmFixup.kext][AirportBrcmFixup.kext]] for Wi-Fi
- Include [[https://github.com/RehabMan/OS-X-BrcmPatchRAM][OS-X-BrcmPatchRAM]] [[file:kexts/BrcmPatchRAM2.kext][BrcmPatchRAM2.kext]] and [[file:kexts/BrcmFirmwareRepo.kext][BrcmFirmwareRepo.kext]] for Bluetooth (for installation to /Library/Extensions)
- After swapping out Wi-Fi card, reset Bluetooth info (e.g. to fix AirDrop)
  - Turn off Bluetooth
  - =sudo rm -f /Library/Preferences/com.apple.Bluetooth.plist*=
  - Reboot and turn on Bluetooth
- Ensure that Wi-Fi adapter's BSD name is =en0=
  - SysPrefs -> Click on Network dropdown -> BSD Device Name for Wi-Fi not =en0=? Continue below, otherwise skip.
  - =sudo rm -f /Library/Preferences/SystemConfiguration/NetworkInterfaces.plist=
  - =sudo rm -f /Library/Preferences/SystemConfiguration/preferences.plist=
  - Reboot
*** Testing Wi-Fi speed
By default, AirportBrcmFixup seems to limit Wi-Fi channel width for 802.11ac to 40MHz instead of
80MHz, even though the country code defaults to US. The workaround is to disable the country code
setting with the boot flag =brcmfx-country=#a= ([[file:CLOVER/config.plist][config.plist]]).

If you have an 802.11ac capable access point, place the XPS 9570 next to it and option-click on the
Wi-Fi icon. After a few minutes, you should see a line like =Channel: 165 (5 GHz, 80 MHz= with a =Tx
Rate= below of 800 Mbps or higher. A congested Wi-Fi environment in an apartment building could
reduce this rate.
*** Messages and FaceTime setup
The above installation steps prepare the way for Messages and FaceTime work as well, but there are
more in-depth guides to Messages [[https://www.tonymacx86.com/threads/an-idiots-guide-to-imessage.196827/][here]] and [[https://www.tonymacx86.com/threads/how-to-fix-imessage.110471/][here]] if needed.

If there are issues with continuity (switching calls between macOS and iPhone for example),
BT4LEContiunityFixup.kext may help fix those, but seems to not be needed for the DW1830.

Remove stale Messages and FaceTime data:
#+BEGIN_SRC sh
rm -rf ~/Library/Caches/com.apple.Messages
rm -rf ~/Library/Caches/com.apple.imfoundation.IMRemoteURLConnectionAgent
rm -rf ~/Library/Caches/com.apple.iCloudHelper
rm -rf ~/Library/Preferences/com.apple.iChat*
rm -rf ~/Library/Preferences/com.apple.icloud*
rm -rf ~/Library/Preferences/com.apple.ids.service*
rm -rf ~/Library/Preferences/com.apple.imagent.plist
rm -rf ~/Library/Preferences/com.apple.imessage*
rm -rf ~/Library/Preferences/com.apple.imservice*
#+END_SRC
*** Known problems/caveats
- Unlock with Apple Watch only works once after actviation, or only sporadically
** Battery status
- Install [[https://github.com/RehabMan/OS-X-ACPI-Battery-Driver][ACPIBatteryManager]] [[file:kexts/ACPIBatteryManager.kext][kext]]

Only the ACPIBatteryManager kext is required on the XPS 9570, but the kext companion [[https://www.tonymacx86.com/threads/guide-how-to-patch-dsdt-for-working-battery-status.116102/][guide]] includes
a good step-by-step tutorial on how to make DSDT edits with [[https://bitbucket.org/RehabMan/os-x-maciasl-patchmatic/downloads/][MaciASL]] if needed.
** Audio
Audio on the XPS 9570 is based on the Realtek ALC298 audio codec, referred to by Dell as "ALC3266-CG
with Waves MaxxAudio Pro". The ALC298 is not supported on macOS by default, so we use AppleALC to
enable it. Audio pipelines on laptops appear to have unique amplifier and gain setups, so we need to
pass a =layout-id= to AppleALC compatible with the XPS 9570. The only ID that works well is
=layout-id=30=.

HDMI audio output probably requires SSDT-HDEF and FakePCIID_Intel_HDMI_Audio.kext, but is not
implemented yet since it depends on a graphics fix.

*** Installation
- [[file:CLOVER/config.plist][config.plist]]
  - ACPI/DSDT/Patches/Item n
    - Comment: Change HDAS to HDEF for audio device
    - Key=Find, Type=Data, Value=<48444153>
    - Key=Replace, Type=Data, Value=<48444546>
  - Devices/Properties/PciRoot(0)/Pci(0x1f,3)
    - Comment: AppleALC layout-id for ALC298 on XPS 9570
    - layout=id=30
- Install [[https://github.com/acidanthera/AppleALC][AppleALC]] [[file:kexts/AppleALC.kext][kext]]
*** Known problems/caveats
- A bad =layout-id= causes constant CPU activity in a =kernel_task= process (30 should be ok)
- Lack of an audio output device causes video playback problems, i.e. stalling when seeking
- HDMI audio out not implemented since HDMI out causes kernel panic (dependent on graphics fix)
** USB
The XPS 9570 DSDT table has a few incorrect USB properties, for example the right side type A port
is marked as being internal, so an attached disk can't be easily ejected. The correct properties are
injected via USBInjectAll and in [[file:CLOVER/ACPI/patched/SSDT-UIAC.dsl][SSDT-UIAC.dsl]].

Based on [[https://www.tonymacx86.com/threads/guide-10-11-usb-changes-and-solutions.173616/][USB guide]] and [[https://www.tonymacx86.com/threads/guide-creating-a-custom-ssdt-for-usbinjectall-kext.211311/][companion guide.]]

USB config reported by DSDT (connectable ports only):
| Port | Visible | Type        |
|------+---------+-------------|
| HS01 | Yes     | Proprietary |
| HS02 | Yes     | Type A      |
| HS04 | No      | Proprietary |
| HS05 | Yes     | Proprietary |
| HS07 | No      | Proprietary |
| HS09 | No      | Proprietary |
| HS12 | No      | Proprietary |
| SS01 | Yes     | Proprietary |
| SS02 | Yes     | Proprietary |

Actual hwardware config:
| Port      | Type        | User Visible* | Description                                |
|-----------+-------------+---------------+--------------------------------------------|
| HS01/SS01 | Type A      | Yes           | Right side                                 |
| HS02/SS02 | Type A      | Yes           | Left side                                  |
| HS04      | Proprietary | No            | Bluetooth                                  |
| HS05      | Type C      | Yes           | Left side                                  |
| HS07      | Proprietary | No            | Goodix fingerprint reader                  |
| HS09      | Proprietary | No            | No longer used; touchscreen on prior model |
| HS12      | Proprietary | No            | Webcam                                     |

(*) "Set if the device connection point can be seen by the user without disassembly" according to
ACPI 6.2 A, 6.1.8, _PLD (Physical Location of Device)
*** Implementing USB port fixes and removing unused ports
- Include [[https://github.com/RehabMan/OS-X-USB-Inject-All][USBInjectAll]] [[file:kexts/USBInjectAll.kext][kext]]
- Include [[file:CLOVER/ACPI/patched/SSDT-UIAC.aml][SSDT-UIAC.aml]] ([[file:CLOVER/ACPI/patched/SSDT-UIAC.dsl][SSDT-UIAC.dsl]]) - based on [[https://github.com/RehabMan/OS-X-USB-Inject-All/blob/master/SSDT-UIAC-ALL.dsl][SSDT-UIAC-ALL.dsl]] and customized for XPS 9570
*** Known issue: left side type C port only works in HS mode, not SS
Will likely work when USB type C and/or Thunderbolt fixes are added.
*** Unintended side effect: intermittently causes screen brightness to work without 3 min. delay
This occurs without a port limit patch, without SSDT-UIAC.aml, and boot flags "-uia_exclude_hs uia_include=HS04".
** Touch ID / Goodix fingerprint sensor
It's [[https://www.tonymacx86.com/threads/solved-asus-ux430ua-fingerprint-trackpad-touch-id.230671/#post-1572495][not possible]] to use fingerprint sensor for Touch ID according to RehabMan. Perhaps the
integrated Goodix fingerprint sensor can be used, and enabled with PAM (TBD).

Since we're using the =MacBookPro15,1= SMBIOS, macOS is expecting Touch ID to be available, causing
lag on password prompts. This can be disabled for now with the NoTouchID kext.

- Install [[https://github.com/al3xtjames/NoTouchID][NoTouchID]] [[file:kexts/NoTouchID.kext][kext]]
** FakeSMC/VirtualSMC

One of these is required to boot macOS.

[[https://github.com/acidanthera/VirtualSMC][VirtualSMC]] and [[https://github.com/RehabMan/OS-X-FakeSMC-kozlek][FakeSMC]]

** Windows compatibility
*** Real-time clock
macOS sets BIOS clock to UTC, but Windows sets clock to local time. The solution is to set Windows
to use UTC as well, with =regedit=:

- regedit -> =HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation=
- create new DWORD (32-bit) =RealTimeIsUniversal= with value '1'
** Known problems/caveats
- Drive encryption is disabled (haven't tried)
- Thunderbolt, USB3 on type-C port not working (haven't tried; should be possible)
- Suspend and resume not implemented properly - power button should wake however
- Internal keyboard behaves strangely when Keyboard SysPrefs are changed - must use SSDT to configure VoodooPS2Controller
- VoodooPS2Controller provides poor touchpad support (should be implemented with VoodooI2C probably, TODO)
- Wi-Fi and Bluetooth require card swap, since there are no macOS drivers for OEM Killer Qualcomm card
- Fingerprint reader does not work (see Touch ID / fingerprint reader section)
- SD card reader not present
- +Black/dark screen 3 minutes after booting+
- +Temporary hang whenever Touch ID is requested+
- +Right-side USB port appears as an internal port, so devices attached to it can't be ejected+
- +Hang on boot with Apple logo intermittently+
- +Graphics acceleration becomes poor after display goes to sleep+
- +Constant CPU activity in kernel_task process+
- +Messages does not work by default+
* ACPI DSDT/SSDT patching
Most of the ACPI patching info is based on the [[https://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/][laptop DSDT/SSDT guide]] and [[https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/][hotpatching guide]].

Many ACPI patches depend on starting out with a working set of ACPI tables (accomplished via
patching if needed), so it's useful to test if this is the case and fix any errors before attempting
further changes.

To do this, we can look through the macOS boot logs for ACPI errors, dump the unmodified ACPI
tables, and dump the ACPI tables as modified by Clover. Making changes as needed, rebooting, and
re-inspecting system logs, we can iterate until there are no more ACPI problems as seen by macOS.

Note: this process wasn't clear to me from reading the patching guides initially, but it may not be
the best way to do it - caveat emptor.

1. Inspect system logs for errors
   Immediately after bootup, dump system log for the last 10 minutes (adjust as needed):
   =log show --predicate 'process == "kernel"' --style syslog --source --debug --last 10m > sys_log.txt=
   Then search =sys_log.txt= for "ACPI Error" or "ACPI Exception".
2. Dump unmodified ACPI tables
   Press F4 on Clover boot screen (no output will show), then mount EFI partition and look for
   ACPI tables in =CLOVER/ACPI/origin=.
3. Check unmodified tables for errors with iasl
   Disassembling all tables from a single namespace with the =-da= option should yield no errors:
   =iasl -da -dl DSDT.aml SSDT-*.aml=
   Although, some duplicate definitions with the error AE_ALREADY_EXISTS may not be a problem (TBD).
   If an error occurs, check the file =DSDT.dsl= for possible error output.
4. Check modified tables as injected by Clover with patchmatic and iasl
   #+BEGIN_SRC sh
   patchmatic -extract
   iasl -da -dl DSDT.aml SSDT-*.aml
   #+END_SRC
   Again, this should yield no errors. If a duplicate definition is found with AE_ALREADY_EXISTS,
   try disassembling the tables without the =-da= option:
   =iasl -dl DSDT.aml SSDT-*.aml=
   If this still fails, there is likely a problem that needs to be fixed via Clover patching first.
* Installation and system updates
** Installation from scratch
*** Preparing the XPS 9570
This setup dual-boots Windows 10, which is nice to have for games, since we can actually use the
NVIDIA GTX 1050, unlike in macOS.

Begin with the default Windows 10 installation (or install Windows 10 if using a new drive).

- Update BIOS and other firmware using Dell SupportAssist in Windows
- Toshiba SSD only
  - Update [[https://www.dell.com/support/home/us/en/04/product-support/product/xps-15-9570-laptop/drivers][Toshiba SSD firmware]] (search for "toshiba")
    Needed to fix 4k sector bug. Dell SupportAssist does not do this automatically!
  - Set SSD to [[https://github.com/wmchris/DellXPS15-9550-OSX/blob/master/4k_sector.md][use 4k sectors]] - this will WIPE the drive!
- Enable Intel SpeedShift in BIOS
- TODO: add more steps from original notes.org
*** Creating USB installation media (see [[https://www.tonymacx86.com/threads/guide-booting-the-os-x-installer-on-laptops-with-clover.148093/][guide]] for more details)
- Download macOS install from App Store
- Format USB drive and write installer to drive (assuming drive is =/dev/disk100=)
  #+BEGIN_SRC sh
  diskutil partitionDisk /dev/disk100 1 GPT HFS+J "install_osx" R
  sudo "/Applications/Install macOS Mojave.app/Contents/Resources/createinstallmedia" --volume  /Volumes/install_osx --nointeraction
  diskutil rename "Install macOS Mojave" install_osx
  #+END_SRC
- Install Clover on USB drive
  - Using RehabMan's fork of Clover: [[https://github.com/RehabMan/Clover][source]], [[https://bitbucket.org/RehabMan/clover/downloads/][binaries]]
  - Run installer
    - 'Change Install Location' -> Select =install_osx= volume
    - 'Customize', then apply the following _changes_
      - [X] Clover for UEFI booting only
      - [X] UEFI Drivers -> VBoxHfs-64
- TODO: This isn't enough to boot the installer - will need to provide config.plist. Re-visit when documenting full installation process.
  Installing updates is possible when injecting Intel graphics, with invalid platform id, e.g. 0x12345678, and disabling kext patches.
  Perhaps it makes sense to have a special macOS install CLOVER folder, that disables any brightness 'fixes' that cause the display to be dimmed. TBD.
* Versions
- Clover: v2.4k r4701 RM-4963
* Miscellaneous Notes
** Installing kexts
Kexts should be installed in =/Library/Extensions=.

Installation:
#+BEGIN_SRC sh
sudo cp -r <mydriver.kext> /Library/Extensions
sudo chown -R root:wheel /Library/Extensions/<mydriver.kext>
sudo kextcache -i / # update kext cache
#+END_SRC

*Be sure to check output for errors!*

Every custom kext should be listed with the line =Kext with invalid signatured (-67062) allowed=
** Kext patching
Kexts can be patched on boot by Clover (see =KernelAndKextPatches/KextsToPatch= section in
[[file:CLOVER/config.plist][config.plist]]), but Clover has some limitations, e.g. it can only patch kexts that are in the kext
cache. More complex cases can be handled by [[https://github.com/acidanthera/Lilu][Lilu]], used for "arbitrary kext and process patching",
which is itself installed as a [[file:kexts/Lilu.kext][kext]]. Excellent [[https://www.tonymacx86.com/threads/an-idiots-guide-to-lilu-and-its-plug-ins.260063/][guide]] to using Lilu and commonly used plugins.
** ACPI debugging
The [[https://github.com/RehabMan/OS-X-ACPI-Debug][OS-X-ACPI-Debug]] repo allows for "debug tracing from ACPI code (DSDT) to system.log".
Not currently installed and not tested, but should be useful if ACPI  problems come up.
** Links to tonymacx86.com guides, etc
*** [[https://www.tonymacx86.com/threads/faq-read-first-laptop-frequent-questions.164990/][Laptop Frequent Questions]]
Long, thorough guide. Good to refer back to for specific issues.
